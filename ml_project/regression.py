# -*- coding: utf-8 -*-
"""regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LUMzjWUqnev2QUXMrr_CuC3M2wTFw_k8
"""

#!pip install pydrive

"""# **Linear Regression**

**Import Google libraries for authentication and file download**
"""

from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from google.colab import auth
from oauth2client.client import GoogleCredentials

"""**Authenticating with google to fetch files from google drive**"""

auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

"""**Download data files**"""

downloaded = drive.CreateFile({'id':"1M4uCzGvtMIFNptLs7R7Lux3bFE2F6N-s"})  
downloaded.GetContentFile('test.csv')       
downloaded = drive.CreateFile({'id':"1zgKTFsaqRXOCM_CFsO1BCqE6d2-AR8dC"})   
downloaded.GetContentFile('train.csv')

"""**Import Numpy, Pandas, Scikit Learn and matplotlib** <br>
Numpy : Number processing <br>
Pandas : dataframe processing <br>
Scikit learn : Machine Learning <br>
Matplotlib : Plotting graphs
"""

# Using Sklearn Library
import numpy as np
import pandas as pd
import os
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score,mean_squared_error
import matplotlib.pyplot as plt

"""**Reading train and test data as dataframe**"""

df_train = pd.read_csv('train.csv')
df_test = pd.read_csv('test.csv')

"""**Drop rows having null values**"""

df_train = df_train.dropna()
df_test = df_test.dropna()

"""**Check Dataframe**"""

df_train

df_test

"""**Assign train and test data**"""

x_train = df_train['x']
y_train = df_train['y']
x_test = df_test['x']
y_test = df_test['y']

"""**Convert to array**"""

x_train = np.array(x_train)
y_train = np.array(y_train)
x_test = np.array(x_test)
y_test = np.array(y_test)

"""**Change shape of array for readablity by sklearn**"""

x_train = x_train.reshape(-1,1)
x_test = x_test.reshape(-1,1)

"""**Fit the dataset to Linear Regression Model**"""

clf = LinearRegression(normalize=True)
clf.fit(x_train,y_train)
y_pred = clf.predict(x_test)

"""**Print Coefficients , MSE and R2 Square**"""

# Commented out IPython magic to ensure Python compatibility.
print('Coefficients: \n', clf.coef_)
# The mean squared error
print('Mean squared error: %.2f'
#       % mean_squared_error(y_test,y_pred))


print(r2_score(y_test,y_pred))

"""**Plot the data points**"""

plt.figure(figsize=(10,10))
plt.scatter(x_test,y_test,color='red')
plt.plot(x_test, y_pred, color='blue', linewidth=3)
plt.show()