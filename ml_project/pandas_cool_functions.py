# -*- coding: utf-8 -*-
"""pandas_Cool_functions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hOlgXHfBbio6wP4kKbvEAKaMqvX64Fwg
"""

from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from google.colab import auth
from oauth2client.client import GoogleCredentials

auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

downloaded = drive.CreateFile({'id':"1J9HUDllQESKWuctYXf8Z0NxAw9Unps93"})  
downloaded.GetContentFile('netflix_titles.csv')

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px
import os
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score,mean_squared_error
from sklearn.model_selection import train_test_split
from sklearn import metrics
import seaborn as sns
# %matplotlib inline

nf_df = pd.read_csv('netflix_titles.csv')

"""# set option example"""

pd.set_option('display.max_columns', 20)
pd.set_option('display.width', 10)

nf_df.head()

"""# Use of assign functtion
### Help in resolving setting with copy error
"""

nf_test2_df = nf_df
nf_test2_df = nf_test2_df.assign(like=True)
print(len(nf_df.columns))
nf_test2_df.head()

"""# Use of .apply 
 a method to replace for loop in python
"""

fig = px.histogram(nf_df, x='release_year')
fig.show()

nf_df['decade'] = nf_df.release_year.apply(lambda x: str(x)[:3]+'0s')

fig = px.histogram(nf_df, x='decade', category_orders={'decade': np.sort(nf_df.decade.unique())})
fig.show()

nf_df['country'].nunique()

top_countries = nf_df.groupby('country')['title'].count().sort_values().index
nf_df['country'] = nf_df.country.apply(lambda x: 'Others' if (x not in top_countries[-20:]) else x)

fig = px.histogram(nf_df, x='country', color='type', category_orders={'country': top_countries},
color_discrete_sequence=px.colors.qualitative.Safe, template='plotly_white')
fig.show()